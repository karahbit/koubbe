{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red53\green134\blue255;\red0\green0\blue0;
}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c25490\c61176\c100000;\cssrgb\c0\c1\c1;
}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs29\fsmilli14667 \cf2 \expnd0\expndtw0\kerning0
Do this before submit RP_code (export RADICAL_REPORT=TRUE)\
-------------------------------------------\
export RADICAL_PILOT_VERBOSE=DEBUG\
export RADICAL_ENTK_VERBOSE=DEBUG\
export RADICAL_PILOT_PROFILE=TRUE\
export RADICAL_ENTK_PROFILE=TRUE\
\'a0\
\'a0\
To Submit rp code do:\
-------------------------------\
Python rp_code.py xsede.bridges\
\'a0\
\'a0\
To check error in the run go to the session not in the radicalsandbox but in the folder and run\
\'a0\
grep ERROR *.log\
\'a0\
go to and check `resource_xsede` in the ve that should be under `conda_env1/lib/python2.7/site-packages/radical/pilot/config/resource_xsde.json`\
\'a0\
To access BRIDGES SuperComputer ==> gsissh -p 2222 {\field{\*\fldinst{HYPERLINK "http://bridges.psc.xsede.org/"}}{\fldrslt \ul \ulc3 bridges.psc.xsede.org}}\
To access COMET\'a0\'a0 SuperComputer ==> gsissh {\field{\*\fldinst{HYPERLINK "http://comet.sdsc.xsede.org/"}}{\fldrslt \ul \ulc3 comet.sdsc.xsede.org}}\
\'a0\
To access your interactive node on comet do :\
1-from jetstrem execute--> gsissh comet\
2-from comet execute --> idev or (srun --partition=debug --pty --nodes=1 --ntasks-per-node=24 -t 00:30:00 --wait=0 --export=ALL /bin/bash)\
3-to know your node ide execute --> hostname\
4-to access the same node from different terminal access comet and do (ssh + "the hostname you got from the first terminal") .\
5-to access that node resources execute --> htop\
\'a0\
Bridges INTERACTIVE NODE:\
\'a0\
interact -p RM-small -t 60:00 -N 2\
interact -p GPU --gres=gpu:p100:2 -N 4 -t 30:00\
------------------------------------------------------\
To create tmux session and run the shell script in it :\
1-go to the jetstream\
\'a02- execute tmux new -s foo (create a new session )\
3- execute tmux list-session\'a0 (to see the active sessions now)\
4- execute\'a0 tmux a -t SS (to go back to the session that is active)\
5- press ctrl+B and then press D to exit the current session (lock the session so u can back to it again\
6- To terminate the Session tottalt\
7-kill tmux--> tmux kill-session -t name\
\pard\pardeftab720\partightenfactor0
\cf4 8-see output console history \'97> ctrl+b+[ \cf2 \
\'a0\
TO FIX SAGA PYTHON SHELL TIME OUT\
\'a0\
1)export SAGA_PTY_SSH_TIMEOUT=300\
2)ps faux | grep rp | grep <username>\
3)kill -9 <process id>\
\'a0\
Best,\
Aymen}