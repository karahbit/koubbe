Bootstrap: debootstrap
MirrorURL: http://us.archive.ubuntu.com/ubuntu
OSVersion: xenial

%labels

    APPLICATION_NAME neon
    APPLICATION_VERSION 2.6.0
    APPLICATION_URL https://ai.intel.com/neon/

    SYSTEM_NAME comet
    SYSTEM_SINGULARITY_VERSION 2.5.1
    SYSTEM_URL http://www.sdsc.edu/support/user_guides/comet.html

    SINGULARITY_IMAGE_SIZE 8192

    AUTHOR_NAME Marty Kandes
    AUTHOR_EMAIL mkandes@sdsc.edu

    LAST_UPDATED 20180524

%setup

%environment

    # Set system locale
    export LC_ALL=C

%post -c /bin/bash

    # Set system locale
    export LC_ALL=C

    # Install system metapackages
    apt-get -y install ubuntu-standard
    apt-get -y install ubuntu-server

    # Add repositories
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION} main"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION} universe"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION} multiverse"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION} restricted"

    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-updates main"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-updates universe"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-updates multiverse"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-updates restricted"

    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-backports main"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-backports universe"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-backports multiverse"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-backports restricted"

    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-security main"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-security universe"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-security multiverse"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-security restricted"

    # Upgrade all packages to their latest versions
    apt-get -y update && apt-get -y upgrade

    # Install common packages from 'main'
    apt-get -y install autoconf
    apt-get -y install automake
    apt-get -y install build-essential
    apt-get -y install cmake
    apt-get -y install libtool
    apt-get -y install pkg-config
    apt-get -y install gfortran
    apt-get -y install zip

    # Install expect to automate responses for interactive build questions
    apt-get -y install expect

    # Make filesystem mount points
    mkdir /cvmfs /oasis /projects /scratch

    # Use /tmp to store temporary files within the container during the
    # bootstraping process
    cd /tmp

    # Install miniconda2
    wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh
    chmod +x Miniconda2-latest-Linux-x86_64.sh
    ./Miniconda2-latest-Linux-x86_64.sh -b -p /opt/miniconda2

    # Install miniconda3
    wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
    chmod +x Miniconda3-latest-Linux-x86_64.sh
    ./Miniconda3-latest-Linux-x86_64.sh -b -p /opt/miniconda3

    # Install aeon and neon dependencies
    apt-get -y install clang
    apt-get -y install libcurl4-openssl-dev
    apt-get -y install libopencv-dev
    apt-get -y install libsox-dev
    apt-get -y install libboost-filesystem-dev
    apt-get -y install libboost-system-dev
    apt-get -y install libssl-dev
    apt-get -y install ffmpeg

    # Install aeon and neon python dependencies
    apt-get -y install python-dev
    apt-get -y install python-pip
    apt-get -y install python-virtualenv
    apt-get -y install python-numpy
    apt-get -y install python-h5py
    apt-get -y install python-yaml
    apt-get -y install python-opencv
    apt-get -y install python-future
    apt-get -y install python-configargparse

    pip install -y --upgrade setuptools

    cd /opt

    # Download, build, and install aeon for python
    git clone https://github.com/NervanaSystems/aeon.git
    mkdir -p /opt/aeon/build
    cd /opt/aeon/build
    cmake .. \
      -DCMAKE_BUILD_TYPE='Release' \
      -DPYTHON_EXECUTABLE='/usr/bin/python' \
      -DPYTHON_LIBRARIES='/usr/lib/python2.7' \
      -DPYTHON_INCLUDE_DIRS='/usr/include/python2.7' \
      -DENABLE_AEON_SERVICE='OFF' \
      -DENABLE_AEON_CLIENT='ON' \
      -DENABLE_OPENFABRICS_CONNECTOR='OFF'
    pip install .

    cd /opt

    # Download, build, and install neon for python
    git clone https://github.com/NervanaSystems/neon.git
    cd /opt/neon
    git checkout latest
    make neon_install

    # Install aeon and neon python3 dependencies
    apt-get -y install python3-dev
    apt-get -y install python3-pip
    apt-get -y install python3-virtualenv
    apt-get -y install python3-numpy
    apt-get -y install python3-h5py
    apt-get -y install python3-yaml
    apt-get -y install python3-opencv
    apt-get -y install python3-future
    apt-get -y install python3-configargparse

    pip3 install -y --upgrade setuptools

    # Download, build, and install aeon for python3
    cd /opt/aeon/build
    cmake .. \
      -DCMAKE_BUILD_TYPE='Release' \
      -DPYTHON_EXECUTABLE='/usr/bin/python' \
      -DPYTHON_LIBRARIES='/usr/lib/python3.5' \
      -DPYTHON_INCLUDE_DIRS='/usr/include/python3.5' \
      -DENABLE_AEON_SERVICE='OFF' \
      -DENABLE_AEON_CLIENT='ON' \
      -DENABLE_OPENFABRICS_CONNECTOR='OFF'
    pip3 install .

    # Download, build, and install neon for python3
    cd /opt/neon
    sed -i 's/@python setup.py install/@python3 setup.py install/' Makefile
    make neon_install

    # Install common python packages for data science and machine 
    # learning applications
    apt-get -y install python-scipy
    apt-get -y install python-pandas
    apt-get -y install python-matplotlib
    apt-get -y install ipython
    apt-get -y install ipython-notebook
    apt-get -y install python-sympy
    apt-get -y install python-nose
    apt-get -y install python-sklearn
    apt-get -y install python-mlpy
    apt-get -y install python-nltk
    apt-get -y install python-statsmodels

    # Install common python3 packages for data science and machine 
    # learning applications
    apt-get -y install python3-scipy
    apt-get -y install python3-pandas
    apt-get -y install python3-matplotlib
    apt-get -y install ipython3
    apt-get -y install ipython3-notebook
    apt-get -y install python3-sympy
    apt-get -y install python3-nose
    apt-get -y install python3-sklearn
    apt-get -y install python3-nltk

    # Set container environment variables
    cd /.singularity.d/env

    # Update database for mlocate
    updatedb

%files

%runscript

%test

    cd /tmp 
    python /opt/neon/examples/mnist_mlp.py
