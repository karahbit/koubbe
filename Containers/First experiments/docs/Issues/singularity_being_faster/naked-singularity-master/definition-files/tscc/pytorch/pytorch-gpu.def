Bootstrap: debootstrap
MirrorURL: http://us.archive.ubuntu.com/ubuntu
OSVersion: xenial

%labels

    APPLICATION_NAME pytorch
    APPLICATION_VERSION 1.1.0
    APPLICATION_URL http://pytorch.org/

    SYSTEM_NAME tscc
    SYSTEM_SINGULARITY_VERSION 2.5.2
    SYSTEM_URL https://www.sdsc.edu/support/user_guides/tscc.html

    SINGULARITY_IMAGE_SIZE 32768

    AUTHOR_NAME Marty Kandes
    AUTHOR_EMAIL mkandes@sdsc.edu

    LAST_UPDATED 20190927

%setup

%environment

    # Set system locale
    export LC_ALL=C

    # Set paths to CUDA binaries and libraries
    export PATH="/usr/local/cuda-9.2/bin${PATH:+:${PATH}}"
    export LD_LIBRARY_PATH="/usr/local/cuda-9.2/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}"
    export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:/usr/local/cuda/extras/CUPTI/lib64"

    # Set paths to OpenMPI binaries and libraries
    export PATH="/opt/openmpi-1.8.4/bin:${PATH}"
    export LD_LIBRARY_PATH="/opt/openmpi-1.8.4/lib:${LD_LIBRARY_PATH}"

    # Set default miniconda environment
    export PATH="/opt/miniconda3/bin:${PATH}"

%post -c /bin/bash

    # Set system locale
    export LC_ALL=C

    # Install system metapackages
    apt-get -y install ubuntu-standard
    apt-get -y install ubuntu-server

    # Add repositories
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION} main"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION} universe"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION} multiverse"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION} restricted"

    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-updates main"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-updates universe"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-updates multiverse"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-updates restricted"

    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-backports main"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-backports universe"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-backports multiverse"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-backports restricted"

    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-security main"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-security universe"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-security multiverse"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-security restricted"

    # Upgrade all packages to their latest versions
    apt-get -y update && apt-get -y upgrade

    # Install common packages from 'main'
    apt-get -y install autoconf
    apt-get -y install automake
    apt-get -y install build-essential
    apt-get -y install cmake
    apt-get -y install libtool
    apt-get -y install gfortran
    apt-get -y install pkg-config
    apt-get -y install wget
    apt-get -y install zip

    # Install expect to automate responses for interactive build questions
    apt-get -y install expect

    # Make filesystem mount points
    mkdir /cvmfs /oasis /projects /scratch

    # Use /tmp to store temporary files within the container during the
    # bootstraping process
    cd /tmp

    # Install miniconda2
    wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh
    chmod +x Miniconda2-latest-Linux-x86_64.sh
    ./Miniconda2-latest-Linux-x86_64.sh -b -p /opt/miniconda2

    # Install miniconda3
    wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
    chmod +x Miniconda3-latest-Linux-x86_64.sh
    ./Miniconda3-latest-Linux-x86_64.sh -b -p /opt/miniconda3

    # Location of NVIDIA repositories
    declare -r NVIDIA_ROOT_URL='http://developer.download.nvidia.com/compute'
    declare -r CUDA_REPO_URL="${NVIDIA_ROOT_URL}/cuda/repos/ubuntu1604/x86_64"
    declare -r ML_REPO_URL="${NVIDIA_ROOT_URL}/machine-learning/repos/ubuntu1604/x86_64/"

    # Install NVIDIA package dependencies
    apt-get -y install x11-common
    apt-get -y install xserver-xorg-core
    apt-get -y install xserver-xorg-legacy
    apt-get -y install cmake
    apt-get -y install make
    apt-get -y install dkms
    apt-get -y install linux-libc-dev
    apt-get -y install libc6-dev
    apt-get -y install lib32gcc1
    apt-get -y install libc6-i386
    apt-get -y install libgl1
    apt-get -y install libwayland-client0
    apt-get -y install libwayland-server0
    apt-get -y install pkg-config
    apt-get -y install screen-resolution-extra
    apt-get -y install libvdpau1
    apt-get -y install libatk1.0-0
    apt-get -y install libcairo-gobject2
    apt-get -y install libcairo2
    apt-get -y install libfontconfig1
    apt-get -y install libgdk-pixbuf2.0-0
    apt-get -y install libgtk-3-0
    apt-get -y install libgtk2.0-0
    apt-get -y install libjansson4
    apt-get -y install freeglut3-dev
    apt-get -y install libx11-dev
    apt-get -y install libxmu-dev
    apt-get -y install libxi-dev
    apt-get -y install libglu1-mesa
    apt-get -y install libglu1-mesa-dev
    apt-get -y install default-jre

    # Download NVIDIA drivers, libraries, and packages
    wget --wait=10 "${CUDA_REPO_URL}/nvidia-396_396.26-0ubuntu1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/nvidia-396-dev_396.26-0ubuntu1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/nvidia-modprobe_396.26-0ubuntu1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/libcuda1-396_396.26-0ubuntu1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/nvidia-libopencl1-396_396.26-0ubuntu1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/nvidia-opencl-icd-396_396.26-0ubuntu1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/libxnvctrl0_396.26-0ubuntu1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/nvidia-settings_396.26-0ubuntu1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-drivers_396.26-1_amd64.deb"

    wget --wait=10 "${CUDA_REPO_URL}/cuda-license-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-misc-headers-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-nvcc-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-cuobjdump-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-nvprune-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-compiler-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-core-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-cudart-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-driver-dev-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-cudart-dev-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-nvdisasm-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-gdb-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-nvprof-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-memcheck-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-cupti-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-gpu-library-advisor-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-nvtx-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-command-line-tools-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-nvrtc-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-nvrtc-dev-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-nvml-dev-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-nvgraph-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-nvgraph-dev-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-cusolver-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-cusolver-dev-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-cublas-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-cublas-dev-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-cufft-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-cufft-dev-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-curand-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-curand-dev-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-cusparse-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-cusparse-dev-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-npp-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-npp-dev-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-samples-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-documentation-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-nsight-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-nvvp-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-visual-tools-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-tools-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-libraries-dev-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-toolkit-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-libraries-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-runtime-9-2_9.2.88-1_amd64.deb"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-demo-suite-9-2_9.2.88-1_amd64.deb"

    wget --wait=10 "${ML_REPO_URL}/libcudnn7_7.6.2.24-1+cuda9.2_amd64.deb"
    wget --wait=10 "${ML_REPO_URL}/libcudnn7-dev_7.6.2.24-1+cuda9.2_amd64.deb"

    wget --wait=10 "${ML_REPO_URL}/libnccl2_2.4.8-1+cuda9.2_amd64.deb"
    wget --wait=10 "${ML_REPO_URL}/libnccl-dev_2.4.8-1+cuda9.2_amd64.deb"

    # Fix for "update-alternatives: error: error creating symbolic link '/usr/lib/nvidia/alternate-install-present.dpkg-tmp': No such file or directory"
    mkdir -p /usr/lib/nvidia

    # Install NVIDIA drivers, libraries, and packages
    dpkg -i nvidia-396_396.26-0ubuntu1_amd64.deb
    dpkg -i nvidia-396-dev_396.26-0ubuntu1_amd64.deb
    dpkg -i nvidia-modprobe_396.26-0ubuntu1_amd64.deb
    dpkg -i libcuda1-396_396.26-0ubuntu1_amd64.deb
    dpkg -i nvidia-libopencl1-396_396.26-0ubuntu1_amd64.deb
    dpkg -i nvidia-opencl-icd-396_396.26-0ubuntu1_amd64.deb
    dpkg -i libxnvctrl0_396.26-0ubuntu1_amd64.deb
    dpkg -i nvidia-settings_396.26-0ubuntu1_amd64.deb
    dpkg -i cuda-drivers_396.26-1_amd64.deb

    dpkg -i cuda-license-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-misc-headers-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-nvcc-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-cuobjdump-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-nvprune-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-compiler-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-core-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-cudart-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-driver-dev-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-cudart-dev-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-nvdisasm-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-gdb-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-nvprof-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-memcheck-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-cupti-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-gpu-library-advisor-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-nvtx-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-command-line-tools-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-nvrtc-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-nvrtc-dev-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-nvml-dev-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-nvgraph-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-nvgraph-dev-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-cusolver-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-cusolver-dev-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-cublas-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-cublas-dev-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-cufft-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-cufft-dev-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-curand-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-curand-dev-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-cusparse-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-cusparse-dev-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-npp-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-npp-dev-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-samples-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-documentation-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-nsight-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-nvvp-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-visual-tools-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-tools-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-libraries-dev-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-toolkit-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-libraries-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-runtime-9-2_9.2.88-1_amd64.deb
    dpkg -i cuda-demo-suite-9-2_9.2.88-1_amd64.deb

    dpkg -i libcudnn7_7.6.2.24-1+cuda9.2_amd64.deb
    dpkg -i libcudnn7-dev_7.6.2.24-1+cuda9.2_amd64.deb

    dpkg -i libnccl2_2.4.8-1+cuda9.2_amd64.deb
    dpkg -i libnccl-dev_2.4.8-1+cuda9.2_amd64.deb

    # Fixing some path-related issues associated with deb-based install of libcudnn and libnccl ...
    mv /usr/lib/x86_64-linux-gnu/libcudnn_static.a /usr/local/cuda-9.2/lib64/libcudnn_static.a
    mv /usr/lib/x86_64-linux-gnu/libcudnn_static_v7.a /usr/local/cuda-9.2/lib64/libcudnn_static_v7.a
    mv /usr/lib/x86_64-linux-gnu/libcudnn.so.7.6.2 /usr/local/cuda-9.2/lib64/libcudnn.so.7.6.2
    ln -s /usr/local/cuda-9.2/lib64/libcudnn.so.7.6.2 /usr/local/cuda-9.2/lib64/libcudnn.so.7
    ln -s /usr/local/cuda-9.2/lib64/libcudnn.so.7 /usr/local/cuda-9.2/lib64/libcudnn.so
    mv /usr/lib/x86_64-linux-gnu/libnccl_static.a /usr/local/cuda-9.2/lib64/libnccl_static.a
    mv /usr/lib/x86_64-linux-gnu/libnccl.so.2.4.8 /usr/local/cuda-9.2/lib64/libnccl.so.2.4.8
    ln -s /usr/local/cuda-9.2/lib64/libnccl.so.2.4.8 /usr/local/cuda-9.2/lib64/libnccl.so.2
    ln -s /usr/local/cuda-9.2/lib64/libnccl.so.2 /usr/local/cuda-9.2/lib64/libnccl.so
    mv /usr/include/nccl.h /usr/local/cuda-9.2/include/nccl.h
    ln -s /usr/local/cuda-9.2/lib64 /usr/local/cuda-9.2/lib
    mv /usr/share/doc/libnccl2/NCCL-SLA.txt.gz /usr/local/cuda-9.2/NCCL-SLA.txt

    # Set paths to CUDA binaries and libraries
    export PATH="/usr/local/cuda-9.2/bin${PATH:+:${PATH}}"
    export LD_LIBRARY_PATH="/usr/local/cuda-9.2/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}"
    export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:/usr/local/cuda/extras/CUPTI/lib64"

    # Install basic drivers for user space access to Ethernet, RDMA,
    # and Infiniband. See https://community.mellanox.com/docs/DOC-2431
    apt-get -y install dkms
    apt-get -y install infiniband-diags
    apt-get -y install libibverbs-dev
    apt-get -y install ibacm
    apt-get -y install librdmacm-dev
    apt-get -y install libmlx4-dev
    apt-get -y install libmlx5-dev
    apt-get -y install mstflint
    apt-get -y install libibcm-dev
    apt-get -y install libibmad-dev
    apt-get -y install libibumad-dev
    apt-get -y install opensm
    apt-get -y install srptools

    # Install additional tools
    apt-get -y install ibutils
    apt-get -y install ibverbs-utils
    apt-get -y install rdmacm-utils
    apt-get -y install perftest
    apt-get -y install numactl
    apt-get -y install libnuma-dev

    # Install libnl
    apt-get -y install libnl-3-200
    apt-get -y install libnl-route-3-200
    apt-get -y install libnl-route-3-dev
    apt-get -y install libnl-utils

    # Install OpenMPI dependencies
    apt-get -y install zlib1g-dev

    # Download, build, and install CUDA-aware OpenMPI
    wget https://www.open-mpi.org/software/ompi/v1.8/downloads/openmpi-1.8.4.tar.gz
    tar -xzvf openmpi-1.8.4.tar.gz
    cd openmpi-1.8.4
    ./configure --prefix=/opt/openmpi-1.8.4 --with-cuda
    make all install

    # Set paths to OpenMPI binaries and libraries
    export PATH="/opt/openmpi-1.8.4/bin:${PATH}"
    export LD_LIBRARY_PATH="/opt/openmpi-1.8.4/lib:${LD_LIBRARY_PATH}"

    # Install PyTorch dependencies for python(2)
    export PATH="/opt/miniconda2/bin:${PATH}"
    export CMAKE_PREFIX_PATH=${CONDA_PREFIX:-"$(dirname $(which conda))/../"}
    conda install -y numpy
    conda install -y ninja
    conda install -y pyyaml
    conda install -y mkl
    conda install -y mkl-include
    conda install -y setuptools
    conda install -y cmake
    conda install -y cffi
    conda install -y typing
    conda install -y mkldnn -c mingfeima

    # Add LAPACK support for the GPU
    conda install -y magma-cuda92 -c pytorch

    # Install common python packages for data science and machine
    # learning applications
    conda install -y pandas
    conda install -y matplotlib
    conda install -y ipython
    conda install -y jupyter
    conda install -y sympy
    conda install -y nose
    conda install -y scikit-learn
    conda install -y scikit-image
    conda install -y nltk
    conda install -y statsmodels
    conda install -y opencv

    cd /opt

    # Download, build, and install PyTorch for python(2)
    export CC='mpicc'
    export CXX='mpicxx'
    export CFLAGS='-march=sandybridge -mmmx -mno-3dnow -msse -msse2 -msse3 -mssse3 -mno-sse4a -mcx16 -msahf -mno-movbe -maes -mno-sha -mpclmul -mpopcnt -mno-abm -mno-lwp -mno-fma -mno-fma4 -mno-xop -mno-bmi -mno-bmi2 -mno-tbm -mavx -mno-avx2 -msse4.2 -msse4.1 -mno-lzcnt -mno-rtm -mno-hle -mno-rdrnd -mno-f16c -mno-fsgsbase -mno-rdseed -mno-prfchw -mno-adx -mfxsr -mxsave -mxsaveopt -mno-avx512f -mno-avx512er -mno-avx512cd -mno-avx512pf -mno-prefetchwt1 -mtune=sandybridge'
    export USE_OPENMP=1
    export USE_NNPACK=1
    export USE_QNNPACK=1
    export USE_MKLDNN=1
    export USE_DISTRIBUTED=1
    export USE_GLOO=1
    export USE_GLOO_IBVERBS=1
    export USE_IBVERBS=1
    export USE_MPI=1
    export USE_C10D_MPI=1
    export USE_CUDA=1
    export USE_CUDNN=1
    export USE_NCCL=1
    export USE_OPENCV=1
    export USE_FBGEMM=0
    export TORCH_CUDA_ARCH_LIST='3.0;3.5;3.7;5.2;6.1'
    git clone --recursive https://github.com/pytorch/pytorch
    cd /opt/pytorch
    git checkout v1.1.0
    git submodule sync
    git submodule update --init
    python setup.py install

    # Download and install PyTorch Vision package for python(2)
    git clone https://github.com/pytorch/vision.git
    cd /opt/pytorch/vision
    git checkout v0.3.0
    python setup.py install

    # Install PyTorch dependencies for python3
    export PATH="/opt/miniconda3/bin:${PATH}"
    xport CMAKE_PREFIX_PATH=${CONDA_PREFIX:-"$(dirname $(which conda))/../"}
    conda install -y numpy
    conda install -y ninja
    conda install -y pyyaml
    conda install -y mkl
    conda install -y mkl-include
    conda install -y setuptools
    conda install -y cmake
    conda install -y cffi
    conda install -y typing
    conda install -y mkldnn -c mingfeima

    # Add LAPACK support for the GPU
    conda install -y magma-cuda92 -c pytorch

    # Install common python3 packages for data science and machine
    # learning applications
    conda install -y pandas
    conda install -y matplotlib
    conda install -y ipython
    conda install -y jupyter
    conda install -y sympy
    conda install -y nose
    conda install -y scikit-learn
    conda install -y scikit-image
    conda install -y nltk
    conda install -y statsmodels
    conda install -y opencv

    # Download, build, and install PyTorch for python3
    cd /opt/pytorch
    python setup.py clean --all
    python setup.py install

    # Download and install PyTorch Vision package for python3
    cd /opt/pytorch/vision
    python setup.py clean --all
    python setup.py install

    # Download the PyTorch examples repository
    cd /opt/pytorch
    git clone https://github.com/pytorch/examples.git

    # Update database for mlocate
    updatedb

%files

%runscript

    echo "    ______ ____ _____ _____   "
    echo "   /_  __// __// ___// ___/   "
    echo "    / /  _\ \ / /__ / /__     "
    echo "   /_/  /___/ \___/ \___/     "
    echo "                              "

%test
