Bootstrap: yum 
OSVersion: 7
MirrorURL: http://mirror.centos.org/centos-7/7/os/x86_64/
Include: yum

%labels

    APPLICATION_NAME beast
    APPLICATION_VERSION 1.10.4
    APPLICATION_URL http://beast.community/

    SINGULARITY_VERSION 2.6.1
    SINGULARITY_IMAGE_SIZE 16384

    AUTHOR_NAME Marty Kandes
    AUTHOR_EMAIL mkandes@sdsc.edu

    LAST_UPDATED 20200209

%setup

%environment

    # Set system locale
    export LC_ALL=C
 
    # Set paths to CUDA binaries and libraries
    export PATH="/usr/local/cuda-10.1/bin${PATH:+:${PATH}}"
    export LD_LIBRARY_PATH="/usr/local/cuda-10.1/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}"

    # Set LD_LIBRARY_PATH to beagle
    export LD_LIBRARY_PATH="/opt/beagle/lib:${LD_LIBRARY_PATH}"

    # Set PATH to beast
    export PATH="/opt/beast/bin:${PATH}"

    # Set PATH to tracer
    export PATH="/opt/tracer/bin:${PATH}"

    # Set PATH to figtree
    export PATH="/opt/figtree/bin:${PATH}"

%post -c /bin/bash

    # Set system locale
    export LC_ALL=C

    # Add repositories
    yum -y install epel-release

    # Install system metapackages
    yum -y groupinstall "Development Tools"
    yum -y groupinstall "Additional Development"
    yum -y groupinstall "Compatibility Libraries"

    # Update all packages to their latest versions
    yum -y update

    # Install common packages
    yum -y install bc
    yum -y install cmake
    yum -y install curl
    yum -y install mlocate
    yum -y install rsync
    yum -y install time
    yum -y install wget
    yum -y install which

    # Install expect to automate responses for interactive build questions
    yum -y install expect

    # Use /tmp to store temporary files within the container during the
    # bootstraping process
    cd /tmp

    # Install miniconda3
    wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
    chmod +x Miniconda3-latest-Linux-x86_64.sh
    ./Miniconda3-latest-Linux-x86_64.sh -b -p /opt/miniconda3

    # Location of NVIDIA repositories
    declare -r NVIDIA_ROOT_URL='http://developer.download.nvidia.com/compute'
    declare -r CUDA_REPO_URL="${NVIDIA_ROOT_URL}/cuda/repos/rhel7/x86_64"
    declare -r ML_REPO_URL="${NVIDIA_ROOT_URL}/machine-learning/repos/rhel7/x86_64"

    # Install NVIDIA package dependencies
    yum -y install xorg-x11-server-Xorg
    yum -y install xorg-x11-server-common
    yum -y install xorg-x11-apps
    yum -y install xorg-x11-utils
    yum -y install xorg-x11-xauth
    yum -y install xorg-x11-xkb-utils
    yum -y install cmake
    yum -y install make
    yum -y install dkms
    yum -y install kernel-headers
    yum -y install glibc-devel
    yum -y install glibc-headers
    yum -y install glibc-utils
    yum -y install libwayland-client
    yum -y install libwayland-server
    yum -y install pkgconfig
    yum -y install libvdpau
    yum -y install libva-vdpau-driver
    yum -y install atk
    yum -y install atk-devel
    yum -y install cairo
    yum -y install cairo-devel
    yum -y install cairo-gobject
    yum -y install cairo-gobject-devel
    yum -y install cairo-tools
    yum -y install fontconfig
    yum -y install fontconfig-devel 
    yum -y install gdk-pixbuf2
    yum -y install gdk-pixbuf2-devel
    yum -y install gtk3
    yum -y install gtk3-devel
    yum -y install gtk2
    yum -y install gtk2-devel
    yum -y install jansson
    yum -y install freeglut
    yum -y install freeglut-devel
    yum -y install libX11
    yum -y install libX11-devel
    yum -y install libX11-common
    yum -y install libXmu
    yum -y install libXmu-devel
    yum -y install libXi
    yum -y install libXi-devel
    yum -y install mesa-libGLU
    yum -y install mesa-libGLU-devel
    yum -y install java-1.8.0-openjdk
    yum -y install java-1.8.0-openjdk-devel

    yum -y install grubby
    yum -y install libtirpc
    yum -y install ocl-icd
    yum -y install opencl-filesystem
    yum -y install vulkan-filesystem

    # Download NVIDIA driver, libraries, and packages
    wget --wait=10 "https://developer.nvidia.com/compute/cuda/10.1/Prod/local_installers/cuda-repo-rhel7-10-1-local-10.1.168-418.67-1.0-1.x86_64.rpm"
    rpm -i cuda-repo-rhel7-10-1-local-10.1.168-418.67-1.0-1.x86_64.rpm
    yum clean all

    wget --wait=10 "${CUDA_REPO_URL}/nvidia-driver-cuda-libs-418.67-4.el7.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/nvidia-driver-libs-418.67-4.el7.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/dkms-nvidia-418.67-1.el7.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/nvidia-driver-418.67-4.el7.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/nvidia-driver-devel-418.67-4.el7.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/nvidia-persistenced-418.67-1.el7.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/nvidia-driver-cuda-418.67-4.el7.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/nvidia-driver-diagnostic-418.67-4.el7.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/nvidia-driver-NVML-418.67-4.el7.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/nvidia-driver-NvFBCOpenGL-418.67-4.el7.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/nvidia-libXNVCtrl-418.67-1.el7.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/nvidia-libXNVCtrl-devel-418.67-1.el7.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/nvidia-modprobe-418.67-1.el7.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/nvidia-settings-418.67-1.el7.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/nvidia-xconfig-418.67-1.el7.x86_64.rpm"

    # Download CUDA libraries and packages
    wget --wait=10 "${CUDA_REPO_URL}/cuda-compat-10-1-418.67-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-license-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-misc-headers-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-nvcc-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-cuobjdump-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-nvprune-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-compiler-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-cudart-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-driver-dev-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-cudart-dev-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-nvdisasm-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-gdb-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-nvprof-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-memcheck-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-cupti-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-gpu-library-advisor-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-nvtx-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-sanitizer-api-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-command-line-tools-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-nvrtc-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-nvrtc-dev-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-nvml-dev-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-nvgraph-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-nvgraph-dev-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-nvjpeg-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-nvjpeg-dev-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-cusolver-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-cusolver-dev-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/libcublas10-10.2.0.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/libcublas-devel-10.2.0.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-cufft-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-cufft-dev-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-curand-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-curand-dev-10-1-10.1.168-1.x86_64.rpm"    
    wget --wait=10 "${CUDA_REPO_URL}/cuda-cusparse-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-cusparse-dev-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-npp-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-npp-dev-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-samples-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-documentation-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-nsight-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-nsight-compute-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-nsight-systems-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-nvvp-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-visual-tools-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-tools-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-libraries-dev-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-toolkit-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-libraries-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-drivers-418.67-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-runtime-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-demo-suite-10-1-10.1.168-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/cuda-10-1-10.1.168-1.x86_64.rpm"

    wget --wait=10 "${CUDA_REPO_URL}/libcutensor1-1.0.0-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/libcutensor-devel-1.0.0-1.x86_64.rpm"
    wget --wait=10 "${CUDA_REPO_URL}/libcutensor-doc-1.0.0-1.x86_64.rpm"

    wget --wait=10 "${ML_REPO_URL}/libcudnn7-7.6.5.32-1.cuda10.1.x86_64.rpm"
    wget --wait=10 "${ML_REPO_URL}/libcudnn7-devel-7.6.5.32-1.cuda10.1.x86_64.rpm"

    wget --wait=10 "${ML_REPO_URL}/libnccl-2.5.6-1+cuda10.1.x86_64.rpm"
    wget --wait=10 "${ML_REPO_URL}/libnccl-devel-2.5.6-1+cuda10.1.x86_64.rpm"

    wget --wait=10 "${ML_REPO_URL}/libnvinfer6-6.0.1-1.cuda10.1.x86_64.rpm"
    wget --wait=10 "${ML_REPO_URL}/libnvinfer-devel-6.0.1-1.cuda10.1.x86_64.rpm"
    wget --wait=10 "${ML_REPO_URL}/libnvinfer-plugin6-6.0.1-1.cuda10.1.x86_64.rpm"
    wget --wait=10 "${ML_REPO_URL}/libnvinfer-plugin-devel-6.0.1-1.cuda10.1.x86_64.rpm"
    wget --wait=10 "${ML_REPO_URL}/libnvonnxparsers6-6.0.1-1.cuda10.1.x86_64.rpm"
    wget --wait=10 "${ML_REPO_URL}/libnvonnxparsers-devel-6.0.1-1.cuda10.1.x86_64.rpm"
    wget --wait=10 "${ML_REPO_URL}/libnvparsers6-6.0.1-1.cuda10.1.x86_64.rpm"
    wget --wait=10 "${ML_REPO_URL}/libnvparsers-devel-6.0.1-1.cuda10.1.x86_64.rpm"
    wget --wait=10 "${ML_REPO_URL}/python3-libnvinfer-6.0.1-1.cuda10.1.x86_64.rpm"
    wget --wait=10 "${ML_REPO_URL}/python3-libnvinfer-devel-6.0.1-1.cuda10.1.x86_64.rpm"
    wget --wait=10 "${ML_REPO_URL}/python-libnvinfer-6.0.1-1.cuda10.1.x86_64.rpm"
    wget --wait=10 "${ML_REPO_URL}/python-libnvinfer-devel-6.0.1-1.cuda10.1.x86_64.rpm" 

    # Install NVIDIA drivers, libraries, and packages
    rpm -i nvidia-driver-cuda-libs-418.67-4.el7.x86_64.rpm
    rpm -i nvidia-driver-libs-418.67-4.el7.x86_64.rpm
    yum -y install dkms-nvidia
    yum -y install nvidia-driver
    rpm -i nvidia-driver-NVML-418.67-4.el7.x86_64.rpm
    rpm -i nvidia-driver-NvFBCOpenGL-418.67-4.el7.x86_64.rpm
    rpm -i nvidia-libXNVCtrl-418.67-1.el7.x86_64.rpm
    rpm -i nvidia-libXNVCtrl-devel-418.67-1.el7.x86_64.rpm
    rpm -i nvidia-driver-devel-418.67-4.el7.x86_64.rpm
    rpm -i nvidia-driver-diagnostic-418.67-4.el7.x86_64.rpm
    rpm -i nvidia-modprobe-418.67-1.el7.x86_64.rpm
    rpm -i nvidia-settings-418.67-1.el7.x86_64.rpm
    rpm -i nvidia-xconfig-418.67-1.el7.x86_64.rpm
    yum -y install nvidia-persistenced
    yum -y install nvidia-driver-cuda

    rpm -i cuda-compat-10-1-418.67-1.x86_64.rpm
    rpm -i cuda-license-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-misc-headers-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-nvcc-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-cuobjdump-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-nvprune-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-compiler-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-cudart-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-driver-dev-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-cudart-dev-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-nvdisasm-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-gdb-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-nvprof-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-memcheck-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-cupti-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-gpu-library-advisor-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-nvtx-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-sanitizer-api-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-command-line-tools-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-nvrtc-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-nvrtc-dev-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-nvml-dev-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-nvgraph-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-nvgraph-dev-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-nvjpeg-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-nvjpeg-dev-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-cusolver-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-cusolver-dev-10-1-10.1.168-1.x86_64.rpm
    rpm -i libcublas10-10.2.0.168-1.x86_64.rpm
    rpm -i libcublas-devel-10.2.0.168-1.x86_64.rpm
    rpm -i cuda-cufft-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-cufft-dev-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-curand-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-curand-dev-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-cusparse-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-cusparse-dev-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-npp-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-npp-dev-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-samples-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-documentation-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-nsight-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-nsight-compute-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-nsight-systems-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-nvvp-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-visual-tools-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-tools-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-libraries-dev-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-toolkit-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-libraries-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-drivers-418.67-1.x86_64.rpm
    rpm -i cuda-runtime-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-demo-suite-10-1-10.1.168-1.x86_64.rpm
    rpm -i cuda-10-1-10.1.168-1.x86_64.rpm

    rpm -i libcutensor1-1.0.0-1.x86_64.rpm
    rpm -i libcutensor-devel-1.0.0-1.x86_64.rpm
    rpm -i libcutensor-doc-1.0.0-1.x86_64.rpm

    rpm -i libcudnn7-7.6.5.32-1.cuda10.1.x86_64.rpm
    rpm -i libcudnn7-devel-7.6.5.32-1.cuda10.1.x86_64.rpm

    rpm -i libnccl-2.5.6-1+cuda10.1.x86_64.rpm
    rpm -i libnccl-devel-2.5.6-1+cuda10.1.x86_64.rpm

    rpm -i libnvinfer6-6.0.1-1.cuda10.1.x86_64.rpm
    rpm -i libnvinfer-devel-6.0.1-1.cuda10.1.x86_64.rpm
    rpm -i libnvinfer-plugin6-6.0.1-1.cuda10.1.x86_64.rpm
    rpm -i libnvinfer-plugin-devel-6.0.1-1.cuda10.1.x86_64.rpm
    rpm -i libnvonnxparsers6-6.0.1-1.cuda10.1.x86_64.rpm
    rpm -i libnvonnxparsers-devel-6.0.1-1.cuda10.1.x86_64.rpm
    rpm -i libnvparsers6-6.0.1-1.cuda10.1.x86_64.rpm
    rpm -i libnvparsers-devel-6.0.1-1.cuda10.1.x86_64.rpm
    rpm -i python3-libnvinfer-6.0.1-1.cuda10.1.x86_64.rpm
    rpm -i python3-libnvinfer-devel-6.0.1-1.cuda10.1.x86_64.rpm
    rpm -i python-libnvinfer-6.0.1-1.cuda10.1.x86_64.rpm
    rpm -i python-libnvinfer-devel-6.0.1-1.cuda10.1.x86_64.rpm

    # Set paths to CUDA binaries and libraries
    export PATH="/usr/local/cuda-10.1/bin${PATH:+:${PATH}}"
    export LD_LIBRARY_PATH="/usr/local/cuda-10.1/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}"

    # Install beast dependencies
    yum -y install java-1.8.0-openjdk
    yum -y install java-1.8.0-openjdk-devel
    yum -y install ant

    # Download, build, and install beagle library
    git clone https://github.com/beagle-dev/beagle-lib.git
    cd /tmp/beagle-lib
    git checkout v3.1.2
    ./autogen.sh
    ./configure --prefix=/opt/beagle
    make install
    export LD_LIBRARY_PATH="/opt/beagle/lib:${LD_LIBRARY_PATH}"
    make check

    cd /tmp

    # Download, build, and install beast
    git clone https://github.com/beast-dev/beast-mcmc.git
    cd /tmp/beast-mcmc
    git checkout v1.10.4
    export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8
    ant linux
    mv /tmp/beast-mcmc/release/Linux/BEASTv1.10.4 /opt/beast
    cd /opt/beast/bin
    sed -i 's/-Xms64m -Xmx2048m/-Xms256m -Xmx10000m/' beast

    # Set PATH to beast
    export PATH="/opt/beast/bin:${PATH}"

    cd /tmp

    # Download, build, and install tracer
    git clone https://github.com/beast-dev/tracer.git
    cd /tmp/tracer
    git checkout v1.7.1
    ant linux
    mv /tmp/tracer/release/Linux/Tracer_v1.7.1 /opt/tracer

    # Set PATH to tracer
    export PATH="/opt/tracer/bin:${PATH}"

    cd /tmp

    # Download, build, and install figtree
    git clone https://github.com/rambaut/figtree.git
    cd /tmp/figtree
    git checkout v1.4.4
    sed -i 's/linux_unix_Release/linux/g' build.xml
    ant linux
    mv /tmp/figtree/release/Linux/FigTree_v1.4.4 /opt/figtree
    cd /opt/figtree/bin
    sed -i "s/lib/\/opt\/figtree\/lib/g" figtree
    chmod +x figtree

    # Set PATH to figtree
    export PATH="/opt/figtree/bin:${PATH}" 

    # Update database for mlocate
    updatedb

%files

%runscript

%test
