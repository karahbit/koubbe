Bootstrap: debootstrap
MirrorURL: http://us.archive.ubuntu.com/ubuntu
OSVersion: xenial

%labels

    APPLICATION_NAME keras + theano
    APPLICATION_VERSION 2.2.0 + 1.0.3
    APPLICATION_URL https://keras.io/

    SYSTEM_NAME comet
    SYSTEM_SINGULARITY_VERSION 2.5.2
    SYSTEM_URL http://www.sdsc.edu/support/user_guides/comet.html

    SINGULARITY_IMAGE_SIZE 16384

    AUTHOR_NAME Marty Kandes
    AUTHOR_EMAIL mkandes@sdsc.edu

    LAST_UPDATED 20181203

%setup

%environment

    # Set system locale
    export LC_ALL=C

    # Set other environment variables
    export PATH="/opt/miniconda2/bin:${PATH}"
    export MKL_THREADING_LAYER='GNU'
    export KERAS_BACKEND='theano'

%post -c /bin/bash

    # Set system locale
    export LC_ALL=C

    # Install system metapackages
    apt-get -y install ubuntu-standard
    apt-get -y install ubuntu-server

    # Add repositories
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION} main"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION} universe"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION} multiverse"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION} restricted"

    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-updates main"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-updates universe"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-updates multiverse"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-updates restricted"

    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-backports main"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-backports universe"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-backports multiverse"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-backports restricted"

    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-security main"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-security universe"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-security multiverse"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-security restricted"

    # Upgrade all packages to their latest versions
    apt-get -y update && apt-get -y upgrade

    # Install common packages from 'main'
    apt-get -y install autoconf
    apt-get -y install automake
    apt-get -y install build-essential
    apt-get -y install cmake
    apt-get -y install libtool
    apt-get -y install pkg-config
    apt-get -y install gfortran
    apt-get -y install zip

    # Install expect to automate responses for interactive build questions
    apt-get -y install expect

    # Make filesystem mount points
    mkdir /cvmfs /oasis /projects /scratch

    # Use /tmp to store temporary files within the container during the
    # bootstraping process
    cd /tmp

    # Install miniconda2
    wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh
    chmod +x Miniconda2-latest-Linux-x86_64.sh
    ./Miniconda2-latest-Linux-x86_64.sh -b -p /opt/miniconda2

    # Install python(2) dependencies for Theano
    export PATH="/opt/miniconda2/bin:${PATH}"
    conda install -y numpy 
    conda install -y scipy 
    conda install -y mkl
    conda install -y nose
    conda install -y sphinx
    conda install -y pydot-ng

    # Install Theano for python(2)
    conda install -y theano

    # Install common python packages for data science and machine
    # learning applications
    conda install -y pandas
    conda install -y matplotlib
    conda install -y ipython
    conda install -y ipython-notebook
    conda install -y sympy
    conda install -y scikit-learn
    conda install -y scikit-image
    conda install -y nltk
    conda install -y statsmodels
    conda install -y opencv

    # Install Keras dependencies for python(2)
    conda install -y yaml
    conda install -y pyyaml

    cd /opt

    # Download, build, and install Keras
    wget https://github.com/keras-team/keras/archive/2.2.0.tar.gz
    tar -xzvf 2.2.0.tar.gz
    cd /opt/keras-2.2.0
    python setup.py install

    # Update database for mlocate
    updatedb

%files

%runscript

%test
