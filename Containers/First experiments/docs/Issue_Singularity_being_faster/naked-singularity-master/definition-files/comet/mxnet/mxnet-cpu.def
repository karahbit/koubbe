Bootstrap: debootstrap
MirrorURL: http://us.archive.ubuntu.com/ubuntu
OSVersion: xenial

%labels

    APPLICATION_NAME mxnet-cpu
    APPLICATION_VERSION 1.3.1
    APPLICATION_URL http://mxnet.io

    SYSTEM_NAME comet
    SYSTEM_SINGULARITY_VERSION 2.5.2
    SYSTEM_URL http://www.sdsc.edu/support/user_guides/comet.html

    SINGULARITY_IMAGE_SIZE 8192

    AUTHOR_NAME Marty Kandes
    AUTHOR_EMAIL mkandes@sdsc.edu

    LAST_UPDATED 20190115

%setup

%environment

    # Set system locale
    export LC_ALL=C

%post -c /bin/bash

    # Set system locale
    export LC_ALL=C

    # Install system metapackages
    apt-get -y install ubuntu-standard
    apt-get -y install ubuntu-server

    # Add repositories
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION} main"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION} universe"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION} multiverse"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION} restricted"

    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-updates main"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-updates universe"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-updates multiverse"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-updates restricted"

    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-backports main"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-backports universe"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-backports multiverse"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-backports restricted"

    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-security main"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-security universe"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-security multiverse"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-security restricted"

    # Upgrade all packages to their latest versions
    apt-get -y update && apt-get -y upgrade

    # Install common packages from 'main'
    apt-get -y install autoconf
    apt-get -y install automake
    apt-get -y install build-essential
    apt-get -y install cmake
    apt-get -y install libtool
    apt-get -y install pkg-config
    apt-get -y install gfortran
    apt-get -y install zip

    # Install expect to automate responses for interactive build questions
    apt-get -y install expect

    # Make filesystem mount points
    mkdir /cvmfs /oasis /projects /scratch

    # Use /tmp to store temporary files within the container during the
    # bootstraping process
    cd /tmp

    # Install miniconda2
    wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh
    chmod +x Miniconda2-latest-Linux-x86_64.sh
    ./Miniconda2-latest-Linux-x86_64.sh -b -p /opt/miniconda2

    # Install miniconda3
    wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
    chmod +x Miniconda3-latest-Linux-x86_64.sh
    ./Miniconda3-latest-Linux-x86_64.sh -b -p /opt/miniconda3

    # Install MXNet dependencies
    apt-get -y install libopenblas-dev
    apt-get -y install liblapack-dev
    apt-get -y install libopencv-dev

    cd /opt

    # Download, build and install MXNet core shared library
    wget https://github.com/apache/incubator-mxnet/releases/download/1.3.1/apache-mxnet-src-1.3.1.rc0-incubating.tar.gz
    tar -xzvf apache-mxnet-src-1.3.1.rc0-incubating.tar.gz
    cd /opt/apache-mxnet-src-1.3.1.rc0-incubating
    make USE_OPENCV=1 USE_BLAS=openblas USE_DIST_KVSTORE=1

    # Install MXNet python(2) bindings
    apt-get -y install python-dev
    apt-get -y install python-setuptools
    apt-get -y install python-pip
    apt-get -y install libgfortran3

    cd /opt/apache-mxnet-src-1.3.1.rc0-incubating/python
    python setup.py install

    # Install common python packages for data science and machine learning applications
    apt-get -y install python-scipy
    apt-get -y install python-pandas
    apt-get -y install python-matplotlib
    apt-get -y install ipython
    apt-get -y install ipython-notebook
    apt-get -y install python-sympy
    apt-get -y install python-nose
    apt-get -y install python-sklearn
    apt-get -y install python-mlpy
    apt-get -y install python-nltk
    apt-get -y install python-statsmodels
    apt-get -y install python-opencv

    # Install common python packages for the biological and biomedical sciences
    apt-get -y install python-biopython
    apt-get -y install python-biopython-sql

    # Install other common python packages
    apt-get -y install python-h5py

    # Install MXNet python3 bindings
    apt-get -y install python3-dev
    apt-get -y install python3-setuptools
    apt-get -y install python3-pip

    python3 setup.py clean --all
    python3 setup.py install

    # Install common python3 packages for data science and machine learning applications
    apt-get -y install python3-scipy
    apt-get -y install python3-pandas
    apt-get -y install python3-matplotlib
    apt-get -y install ipython3
    apt-get -y install ipython3-notebook
    apt-get -y install python3-sympy
    apt-get -y install python3-nose
    apt-get -y install python3-sklearn
    apt-get -y install python3-nltk

    # Install common python3 packages for the biological and biomedical sciences
    apt-get -y install python3-biopython
    apt-get -y install python3-biopython-sql

    # Install other common python3 packages
    apt-get -y install python3-h5py

    # Install graphviz (needed for graph visualization using mxnet.viz).
    apt-get -y install graphviz
    
    # Update database for mlocate
    updatedb

%files

%runscript

%test
