{\rtf1\ansi\ansicpg1252\cocoartf2512
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 George, Greg, Matteo.\
\
As it is right now, automation is achieved by creating a virtual environment and installing FACTS along with its dependencies through PIP. This framework will launch the executables for the required modules on a remote machine, being an HPC cluster, etc. \
\
- So, why do we need containers? What is the benefit that containers are going to bring to FACTS?\
\
	We envision this at two levels:\
	1) We containerize at the framework level. This will allow us to take FACTS apart into individual modules, completely independent from one another, with their own container each. The end user won\'92t have to know about anything else, no virtual environment, no dependencies, no other steps. We would take full advantage of the portability and reproducibility benefits of containers. Therefore, the end user can simply execute the containerized module on the local machine. We can use Docker for this purpose.\
	2) We containerize at the executable level. There is a growing number of modules inside FACTS. Each module has 4 stages: pre-processing, fit, project, post-processing. Each stage has one executable (python3 script). Should we containerize each stage individually or all of them together? We can use Singularity for this purpose.\
\
- Input data is not going to be included in the container. We can integrate (bind mount) it to the Docker container at the time of execution. Singularity already offers integration features that make this easier.\
\
- Where are we going to obtain the containers from?\
	\expnd0\expndtw0\kerning0
As said before, each container would be\kerning1\expnd0\expndtw0  representing a FACTS module. The containers can be downloaded from Docker Hub for example. Lastly, the end user would just need to execute the container.\
\
- We agreed upon retaking this discussion to clarify the details.\
\
- George: As an initial approach, he will start containerizing at the framework level (Docker) with the kopp14 module and data Greg sent him. Once done, he will characterize performance and look for any overheads.}